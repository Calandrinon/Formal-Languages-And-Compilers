
%{ 	 
#include <math.h> 
%} 

DIGIT 		[0-9] 
ID 		[a-z][_a-z0-9]* 
STRING \".*\"

%% 

{DIGIT}+ 	printf( "An integer: %s (%d)\n", yytext, atoi( yytext ) ); 

{DIGIT}+"."{DIGIT}*  printf( "A float: %s (%g)\n", yytext, atof( yytext ) );  
"#".* printf("A comment: \"%s\"\n", yytext);

"defvar"|"deflist"|"if"|"else"|"else if"|"and"|"or"|"not"|"loop" printf( "A keyword: %s\n", yytext );  


{ID} 		printf( "An identifier: %s\n", yytext ); 

{STRING} printf("A string: %s\n", yytext);

"+"|"-"|"*"|"/"|"%"|"="|"<"|">"|"<="|">="|"+="|"-="|"++"|"--"|"**" printf( "An operator: %s\n", yytext ); 

";"|"["|"]"|"{"|"}"|"("|")"|","|":" printf("A separator: %s\n", yytext);

"{"[^}\n]*"}" 		/* eat up one-line comments */ 

[ \t\n]+ 		/* eat up whitespace */ 
		 
. printf("Eroare: %s\n", yytext);
%% 
main( argc, argv ) 
int argc; 
char **argv; 
{ 
    ++argv, --argc; /* skip over program name */ 
    if ( argc > 0 ) 
    yyin = fopen( argv[0], "r" ); 
    else 
     yyin = stdin; 
    yylex(); 
} 
